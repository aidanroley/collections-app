{"version":3,"sources":["collections-page.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","_ref","handleAddItemClick","navigate","useNavigate","React","createElement","Fragment","className","onClick","handleBackClick","ItemGrid","_ref2","items","handleDetailsClick","map","item","key","id","title","CollectionsPagePopup","_ref3","handleClose","handleAction","inputValue","setInputValue","type","value","onChange","e","target","placeholder","SideBar","_ref4","selectedItem","setSelectedItem","setItems","description","setDescription","useState","imageLink","setImageLink","document","getElementById","classList","remove","doneImage","src","alt","handleSubmitImage","updatedItemImage","index","findIndex","updatedItems","done","handleSubmitSidebar","updatedItem","CollectionsPage","collectionName","useParams","sidebarItems","setSidebarItems","showPopUp","setShowPopUp","sidebarInput","setSidebarInput","newItem","length","add","AddNewCollectionButton","PopUpUnderLimit","onClose","PopUpInputValue","handlePopupInputChange","handleSubmitPopUpValue","PopUpOverLimit","RoundedRectangle","PopUpSubmittedValue","handleClick","Sections","_ref5","setShowPopUpOverLimit","setShowPopUpUnderLimit","addRectangle","rectangles","App","setRectangles","setPopUpInputValue","setPopUpSubmittedValue","showPopUpUnderLimit","showPopUpOverLimit","closePopup","CollectionsPageElement","setCollectionsPage","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.90129b74.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\nimport './collections-page.css';\nimport './collections-page-popup.css';\nimport './collections-page-sidebar.css';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction CollectionsPage() {\n\n    const { collectionName } = useParams();\n\n    // Logic for adding a collection item\n    const [items, setItems] = useState([]);\n    const [sidebarItems, setSidebarItems] = useState([]);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleAddItemClick = () => {\n\n        setShowPopUp(true);\n    }\n    \n    // Logic for knowing when to show the pop-up and the input for the pop-up\n    const [showPopUp, setShowPopUp] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const [sidebarInput, setSidebarInput] = useState('');\n\n    const handleClose = () => {\n\n        setShowPopUp(false);\n    }\n\n    // This is for clicking the confirm button on the pop-up\n    const handleAction = () => {\n\n        const newItem = {\n\n            id: items.length + 1,\n            title: `${inputValue}`,\n        };\n\n        const newSidebarItem = {\n\n            id: items.length + 1,\n            title: `${inputValue}`,\n        };\n\n        setItems([...items, newItem]);\n\n        setShowPopUp(false);\n    }\n\n    // This is for cicking the details button\n    const handleDetailsClick = (item) => {\n\n        setSelectedItem(item);\n        setSidebarItems([...sidebarItems, item]);\n        document.getElementById(\"mySidebar\").classList.add(\"active\"); // This line opens the correct sidebar\n        \n    }\n\n    return (\n        <>\n        <div className=\"collections-page\">\n            <SideBar selectedItem={selectedItem} setSelectedItem={setSelectedItem} items={items} setItems={setItems}/>\n            {showPopUp && \n            <CollectionsPagePopup\n                handleClose={handleClose} \n                handleAction={handleAction} \n                inputValue={inputValue} \n                setInputValue={setInputValue}\n            />\n            }\n            <TopBar handleAddItemClick={handleAddItemClick}/>\n            <header className=\"header\">\n                <h1 className=\"title\">{collectionName}</h1>\n                <p className=\"subtitle\">Explore and modify the items in this collection</p>\n            </header>\n            <ItemGrid items={items} handleDetailsClick={handleDetailsClick}/>\n        </div>\n        </>\n    );\n}\n\nfunction TopBar({ handleAddItemClick }) {\n\n    const navigate = useNavigate();\n\n    // So program can go back to the home page\n    const handleBackClick = () => {\n\n    navigate(`/`);\n    }\n\n    return (\n        <>\n        <div className=\"top-bar\">\n                <button className=\"back-button\" onClick={handleBackClick}>← Back</button>\n                <button className=\"add-item-button\" onClick={handleAddItemClick}>+ Add Collection Item</button>\n        </div>\n        </>\n    )\n}\n\nfunction ItemGrid({ items, handleDetailsClick }) {\n\n    return (\n        <>\n        <section className=\"item-grid\">\n                {items.map(item => (\n                    <div className=\"item-card\" key={item.id}>\n                        <h3 className=\"item-title\">{item.title}</h3>\n                        <button className=\"action-button\" onClick={() => handleDetailsClick(item)}>View Details</button>\n                    </div>\n                ))}\n            </section>\n        </>\n    )\n}\n\nfunction CollectionsPagePopup({ handleClose, handleAction, inputValue, setInputValue }) {\n\n    return (\n        <>\n        <div className=\"popup-overlay\">\n            <div className=\"popup-content\">\n                <button className=\"popup-close-button\" onClick={handleClose}>×</button>\n                <h2 className=\"popup-header\">Add an item to the collection</h2>\n                <div className=\"popup-body\">\n                    <p>Enter a name for the collection item.</p>\n                    <input\n                        type=\"text\"\n                        className=\"popup-input\"\n                        value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}\n                        placeholder=\"Type something here...\"\n                    />\n                </div>\n                <button className=\"popup-action-button\" onClick={handleAction}>Confirm</button>\n            </div>\n        </div>\n        </>\n    )\n}\n\nfunction SideBar({ selectedItem, setSelectedItem, items, setItems }) {\n\n    const [description, setDescription] = useState(selectedItem ? selectedItem.description || '' : '');\n    const [imageLink, setImageLink] = useState(selectedItem ? selectedItem.imageLink || '' : '');\n\n    const handleSubmitSidebar = () => {\n\n        const updatedItem = {\n            ...selectedItem,\n            description: description,\n            done: \"yes\",\n        };\n        setSelectedItem(updatedItem);\n\n    // When a description is submitted, these next few lines update that outside just this function scope\n    const index = items.findIndex(item => item.id == updatedItem.id);\n\n    if (index != -1) {\n\n        const updatedItems = [...items];\n        updatedItems[index] = updatedItem;\n        setItems(updatedItems);\n        setSelectedItem(updatedItem);\n    }\n    };\n\n    const handleSubmitImage = () => {\n\n        const updatedItemImage = {\n            ...selectedItem,\n            imageLink: imageLink,\n            doneImage: \"yes\",\n        };\n        setSelectedItem(updatedItemImage);\n\n    // When a description is submitted, these next few lines update that outside just this function scope\n    const index = items.findIndex(item => item.id == updatedItemImage.id);    \n      \n    if (index != -1) {\n    \n        const updatedItems = [...items];\n        updatedItems[index] = updatedItemImage;\n        setItems(updatedItems);\n        setSelectedItem(updatedItemImage);\n    }\n    };\n\n\n    return (\n        <div id=\"mySidebar\" className=\"sidebar\">\n            <button className=\"close-button\" onClick={() => document.getElementById(\"mySidebar\").classList.remove(\"active\")}>×</button>\n            <div className=\"sidebar-content\">\n                {selectedItem && (\n                    <>  \n                        {/* Conditionally render image text area */}\n                        {selectedItem.doneImage == \"yes\" ? (\n                            <img src={selectedItem.imageLink} alt={\"User-provided\"} className=\"uploaded-image\" />\n                        ) : (\n                            <>\n                                <h3>Image</h3>\n                                <textarea\n                                    className=\"description-area\"\n                                    placeholder=\"Enter an image link\"\n                                    value={imageLink}\n                                    onChange={(e) => setImageLink(e.target.value)}\n                                ></textarea>\n                            </>\n                        )}\n\n                        {selectedItem.doneImage !== \"yes\" && (\n                            <button className=\"submit-button\" onClick={handleSubmitImage}>Submit</button>\n                        )}\n                        <h2>{selectedItem.title}</h2>\n\n                        {/* Conditionally render textarea or submitted text */}\n                        {selectedItem.done === \"yes\" ? (\n                            <p>{selectedItem.description}</p>  // Display the submitted text\n                        ) : (\n                            <>\n                                <h3>Description</h3>\n                                <textarea\n                                    id=\"description\"\n                                    className=\"description-area\"\n                                    placeholder=\"Enter description...\"\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                ></textarea>\n                            </>\n                        )}\n\n                        {/* Show submit button only if the description is not submitted */}\n                        {selectedItem.done !== \"yes\" && (\n                            <button className=\"submit-button\" onClick={handleSubmitSidebar}>Submit</button>\n                        )}\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\nexport default CollectionsPage;\n","import './App.css';\nimport './popup.css';\nimport CollectionsPage from './collections-page';\nimport React, { useState } from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\n// This function is for the button you click to add a collection\nfunction AddNewCollectionButton({ onClick }) {\n\n  return (\n    \n    <button\n    onClick={onClick}\n    className=\"add-new-collection-button\">\n      Add New Collection\n    </button>\n  );\n}\n\n// Pop-up to add a collection\nfunction PopUpUnderLimit({ onClose, PopUpInputValue, handlePopupInputChange, handleSubmitPopUpValue }) {\n\n  // This is so the \"Done\" button closes the popup box and transfers the text to the other component at the same time\n  function handleSubmitAndClose () {\n    handleSubmitPopUpValue();\n    onClose();\n  }\n\n  return (\n    <>\n    <div className=\"popup-overlay-under\">\n      <div className=\"popup-box-under\">\n        <button className=\"close-button\" onClick={onClose}>x</button>\n        <h2>Enter a name for the collection</h2>\n        <h6>This will be the name of your collection that will display on the front page</h6>\n        <div className=\"rectangle-button-container\">\n          <input className=\"rectangle-outline\" type=\"text\" placeholder=\"Enter text here... \" value={PopUpInputValue} onChange={handlePopupInputChange}/>\n          <button className=\"popup-box-under-button\" onClick={handleSubmitAndClose}>Done</button>\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n\n// Pop-up when there's too many\nfunction PopUpOverLimit({ onClose }) {\n\n  return (\n    <>\n    <div className=\"popup-overlay-over\">\n      <div className=\"popup-box-over\">\n        <button className=\"close-button\" onClick={onClose}>x</button>\n        <p>Maximum number of collections has been reached (18)</p>\n      </div>\n    </div>\n    </>\n  )\n}\n\n// This function is for the button that holds the collection\nfunction RoundedRectangle({ PopUpSubmittedValue }) {\n\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n\n    navigate(`/collections/${PopUpSubmittedValue}`);\n  }\n\n  return (\n    <>\n    <div className=\"rounded-rectangle\" onClick={handleClick}>\n      {PopUpSubmittedValue}\n    </div>\n    </>\n  );\n}\n\n\n// This includes logic to decide which pop-up should appear and adds the collection buttons\nfunction Sections({ setShowPopUpOverLimit, setShowPopUpUnderLimit, PopUpSubmittedValue, addRectangle, rectangles }) {\n  \n  return (\n    <>\n    <div className=\"top-section\">\n      <h1>Collections</h1>\n    </div>\n      <div className=\"bottom-section\">\n        <AddNewCollectionButton onClick={addRectangle} />\n        <div className=\"grid-container\">\n          {rectangles}\n        </div>\n      </div>\n    </>\n  );\n}\n\n// The highest-tier container\nfunction App() {\n\n  const [rectangles, setRectangles] = useState([]);\n\n  const addRectangle = () => {\n\n    // Max amount of collections is 20\n    if (rectangles.length < 18) {\n\n      setShowPopUpUnderLimit(true);\n    }\n\n    else {\n      \n      setShowPopUpOverLimit(true);\n    }\n\n  };\n\n  // Here is the code that gets the user input from the pop-up for the collection name\n\n  const [PopUpInputValue, setPopUpInputValue] = useState(' ');\n\n  // This is in case I need to do something with the final value in the future.\n  const [PopUpSubmittedValue, setPopUpSubmittedValue] = useState(' ');\n\n  const handlePopupInputChange = (e) => {\n\n    setPopUpInputValue(e.target.value);\n\n  }\n\n  const handleSubmitPopUpValue = () => {\n\n    setPopUpSubmittedValue(PopUpInputValue);\n    setRectangles([...rectangles, <RoundedRectangle key={rectangles.length} PopUpSubmittedValue={PopUpInputValue} />]);\n\n  };\n\n  // Here is the code for the program that decides which pop-up shows up\n\n  const [showPopUpUnderLimit, setShowPopUpUnderLimit] = useState(false);\n  const [showPopUpOverLimit, setShowPopUpOverLimit] = useState(false);\n\n  // This decides whether the pop-ups should be visible or not\n  const closePopup = () => {\n      \n      setShowPopUpUnderLimit(false);\n      setShowPopUpOverLimit(false);\n    \n  }\n\n  // Here is the code that decides whether or not the collections page should show up\n\n  const [CollectionsPageElement, setCollectionsPage] = useState(false);\n\n  const closeCollectionsPage = () => {\n\n    setCollectionsPage(false);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {showPopUpOverLimit && <PopUpOverLimit onClose={closePopup}/>}\n        {showPopUpUnderLimit && (\n\n          <PopUpUnderLimit \n            onClose={closePopup} \n            PopUpInputValue={PopUpInputValue}\n            handlePopupInputChange={handlePopupInputChange}\n            handleSubmitPopUpValue={handleSubmitPopUpValue}\n            PopUpSubmittedValue={PopUpSubmittedValue}\n          />\n        )}\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Sections \n                setShowPopUpOverLimit={setShowPopUpOverLimit} \n                setShowPopUpUnderLimit={setShowPopUpUnderLimit} \n                PopUpSubmittedValue={PopUpSubmittedValue}\n                rectangles={rectangles}\n                addRectangle={addRectangle}\n              />\n            }\n          />\n          <Route\n            path=\"/collections/:collectionName\"\n            element={\n              <CollectionsPage/>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}